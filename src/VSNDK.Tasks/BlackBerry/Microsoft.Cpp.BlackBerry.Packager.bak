<!--
***********************************************************************************************
Modified based on Microsoft.Cpp.Win32.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

This file defines the steps/targets required to build Visual C++ projects
specifically on x86 platforms.

Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="BBNativePackager"  AssemblyFile="$(VCTargetsPath)Platforms\BlackBerry\VSNDK.Tasks.dll" />
  <UsingTask TaskName="BBDeploy"  AssemblyFile="$(VCTargetsPath)Platforms\BlackBerry\VSNDK.Tasks.dll" />
  <UsingTask TaskName="BBSigner"  AssemblyFile="$(VCTargetsPath)Platforms\BlackBerry\VSNDK.Tasks.dll" />
  <UsingTask TaskName="DiffManifests"  AssemblyFile="$(VCTargetsPath)Platforms\BlackBerry\VSNDK.Tasks.dll" />
  <UsingTask TaskName="AsyncExec"  AssemblyFile="$(VCTargetsPath)Platforms\BlackBerry\VSNDK.Tasks.dll" />
  <UsingTask TaskName="SSHDelete"  AssemblyFile="$(VCTargetsPath)Platforms\BlackBerry\VSNDK.Tasks.dll" />
  <UsingTask TaskName="GetAppInfo"  AssemblyFile="$(VCTargetsPath)Platforms\BlackBerry\VSNDK.Tasks.dll" />
  <UsingTask TaskName="CheckIfInstalled"  AssemblyFile="$(VCTargetsPath)Platforms\BlackBerry\VSNDK.Tasks.dll" />
  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <UsingTask TaskName="CheckFlagFile"  AssemblyFile="$(VCTargetsPath)Platforms\BlackBerry\VSNDK.Tasks.dll" />
  <UsingTask TaskName="WriteDebuggerArgs"  AssemblyFile="$(VCTargetsPath)Platforms\BlackBerry\VSNDK.Tasks.dll" />
  
  <PropertyGroup  Condition="$(Configuration.Contains('Release'))">
    <RunBuildBar>true</RunBuildBar>
  </PropertyGroup>

  <PropertyGroup  Condition="$(Configuration.Contains('Debug')) and !Exists('$(LastBuildState)')">
    <RunBuildBar>true</RunBuildBar>
  </PropertyGroup>

  <PropertyGroup  Condition="$(Configuration.Contains('Debug')) and Exists('$(LastBuildState)')">
    <RunBuildBar>true</RunBuildBar>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ConfigurationType)'=='Application'">
    <BuildLinkTargets>
      $(BuildLinkTargets);
    </BuildLinkTargets>
    <BuildLinkAction>$(CommonBuildOnlyTargets);$(BeforeBuildLinkTargets);$(BuildLinkTargets);$(AfterBuildLinkTargets)</BuildLinkAction>
  </PropertyGroup>

  <Target Name="_BuildBarContent" DependsOnTargets="Link;">
    <ItemGroup>
      <BuildBar Include="@(None)" />
    </ItemGroup>
  </Target>

  <Target Name ="_BuildBar" DependsOnTargets="Link;_BuildBarContent;BuildBar;" />

  <!--
  Packages the .bar file.  If the .bar file already exists, this target will list the manifest.
  The DiffManifest target will then compare the new manifest to the one on the device to
  determine which files have been modified.
  -->
  <Target Name="BuildBar" DependsOnTargets="Link;" >
    <ItemGroup>
      <BuildBar Include="@(None)" />
    </ItemGroup>

    <PropertyGroup>
      <TargetPath>$([System.IO.Path]::Combine($(ProjectDir),$(OutDir)$(LibPrefix)$(TargetName)$(TargetExt)))</TargetPath>
      <TargetFileName>$([System.IO.Path]::GetFileName('$(TargetPath)'))</TargetFileName>
      <TargetDir>$([System.IO.Path]::GetDirectoryName('$(TargetPath)'))</TargetDir>
      <TargetName>$(LibPrefix)$(ProjectName)</TargetName>
      <IsAppInstalled Condition="%(BuildBar.DevMode) == 'false'">false</IsAppInstalled>
      <CompileRan>false</CompileRan>
    </PropertyGroup>

    <!-- Get app's ID from bar descriptor. -->
    <GetAppInfo
        Condition="%(BuildBar.DevMode) == 'true'"
        ApplicationDescriptorXml ="%(BuildBar.ApplicationDescriptorXml)"
      >
      <Output TaskParameter="AppId" PropertyName="AppId" />
    </GetAppInfo>

    <ReadLinesFromFile File="CompileRan">
      <Output TaskParameter="Lines" PropertyName="CompileRan" />
    </ReadLinesFromFile>
    <Delete Files="CompileRan" />
    
    
    <!-- Check if the app is installed on the device or not. -->
    <CheckIfInstalled
        Condition="%(BuildBar.DevMode) == 'true'"
        ListFile ="installedApps.txt"
        AppName  ="$(AppId)"
      >
      <Output TaskParameter="IsAppInstalled" PropertyName="IsAppInstalled" />
    </CheckIfInstalled>

    <Message Text="App Installed" Condition="$(IsAppInstalled) == 'true'" />
    <Message Text="App Not Installed" Condition="$(IsAppInstalled) == 'false'" />

    <PropertyGroup>
      <BuildBar_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</BuildBar_MinimalRebuildFromTracking>
      <BuildBar_MinimalRebuildFromTracking Condition="'$(BuildBar_MinimalRebuildFromTracking)' == ''">true</BuildBar_MinimalRebuildFromTracking>
      <ToolPath Condition="$(IsAppInstalled) == 'false'">$(BuildBarToolPath)</ToolPath>
      <ToolPath Condition="$(IsAppInstalled) == 'true'">$(OptimizedDeployToolPath)</ToolPath>
    </PropertyGroup>

    <BBNativePackager  Condition="'$(RunBuildBar)' == 'true'and ('$(CompileRan)' == 'true' or '$(IsAppInstalled)' == 'true')"
        Sources                        ="@(BuildBar)"
        Platform                       ="$(Platform)"
        Configuration                  ="$(Configuration)"
        ApplicationDescriptorXml       ="%(BuildBar.ApplicationDescriptorXml)"
        ProjectDir                     ="$(ProjectDir)"
        SolutionDir                    ="$(SolutionDir)"
        Device            ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP)"
        Password          ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_password)"
        BarDeploy                      ="%(BuildBar.BarDeploy)"
        DevMode                        ="%(BuildBar.DevMode)"
        PackageManifestOnly            ="$(IsAppInstalled)"
        DebugToken                     ="%(BuildBar.DebugToken)"
        TargetFormat                   ="%(BuildBar.TargetFormat)"
        OutputFile                     ="%(BuildBar.OutputFile)"
        ToolExe                        ="$(BuildBarToolExe)"
        ToolPath                       ="$(ToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(BuildBar_MinimalRebuildFromTracking)"
        TrackerLogDirectory            ="%(BuildBar.TrackerLogDirectory)" 
        TLogReadFiles                  ="@(BuildBarTLogReadFiles)"
        TLogWriteFiles                 ="@(BuildBarTLogWriteFiles)"
        AcceptableNonZeroExitCodes     ="%(BuildBar.AcceptableNonZeroExitCodes)"
      >

      <Output TaskParameter="SkippedExecution" PropertyName="BuildBarSkippedExecution" />
      <Output TaskParameter="OutputFile" PropertyName="OutputBar" />
      <Output TaskParameter="Device" PropertyName="TargetIP" />
      <Output TaskParameter="BarDeploy" PropertyName="DeployBar" />
      <Output TaskParameter="Password" PropertyName="Password" />
    </BBNativePackager>

    <Message Condition="'$(BuildBarSkippedExecution)' == 'false'" Text="$(MSBuildProjectFile) -&gt; $(OutputBar)" Importance="High" />

    <!-- Signing the bar file -->
    <Message Condition="'$(BuildBarSkippedExecution)' == 'false' and '%(BuildBar.DevMode)' == 'false'" Text="Info: Signing $(OutputBar) ..." Importance="High" />
    <BBSigner Condition="'$(BuildBarSkippedExecution)' == 'false' and '%(BuildBar.DevMode)' == 'false' and '$(CompileRan)' == 'true'"
      Sources                        ="@(BuildBar)"
      Register                       ="%(BuildBar.Register)"
      CSJFiles                       ="%(BuildBar.SigningCSJFilePath);%(BuildBar.DebugTokenCSJPath)"
      KeyStorePassword               ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@CSKPass)"
      CSJPin                         ="%(BuildBar.CSJPin)"
      OutputFile                     ="%(BuildBar.OutputFile)"
      ToolExe                        ="$(SignerBarToolExe)"
      ToolPath                       ="$(BuildBarToolPath)"
      TrackerLogDirectory            ="%(BuildBar.TrackerLogDirectory)"
      TLogReadFiles                  ="@(BuildBarTLogReadFiles)"
      TLogWriteFiles                 ="@(BuildBarTLogWriteFiles)"
      AcceptableNonZeroExitCodes     ="%(BuildBar.AcceptableNonZeroExitCodes)"
     >
    </BBSigner>

    <Message Text="$(TargetDir)\*.tlog" />
    <ItemGroup>
      <FilesToDelete Include="$(TargetDir)\*.tlog" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" />
  </Target>

  <Target Name="Deploy" Condition="'$(ConfigurationType)'=='Application'">
    <ItemGroup>
      <BuildBar Include="@(None)" />
    </ItemGroup>

    <Error Condition="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP) == ''" Text=" Target device ip is not set. See menu BlackBerry -> Settings" />

    <!-- Store executable path in a file so it can be read by LaunchProcess() -->
    <WriteDebuggerArgs
        ProjectDir ="$(ProjectDir)"
        OutDir = "$(OutDir)"
        AppName = "$(TargetName)"
        Device  ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP)"
        isSimulator ="false"
        ToolsPath ="$(BuildBarToolPath)"
        PublicKeyPath ="$(SSHPublicKeyPath)"
        Password ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_password)"
      >      
    </WriteDebuggerArgs>

    <!-- Get app's ID from bar descriptor. -->
    <GetAppInfo
        Condition="%(BuildBar.DevMode) == 'true'"
        ApplicationDescriptorXml ="%(BuildBar.ApplicationDescriptorXml)"
      >
      <Output TaskParameter="AppId" PropertyName="AppId" />
    </GetAppInfo>

    <!-- Check if the app is installed on the device or not. -->
    <BBDeploy
        Condition="%(BuildBar.DevMode) == 'true'"
        ToolExe           ="$(DeployToolExe)"
        ToolPath          ="$(OptimizedDeployToolPath)"
        Device            ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP)"
        Password          ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_password)"
        ListInstalledApps ="true"
      />

    <CheckIfInstalled
        Condition="%(BuildBar.DevMode) == 'true'"
        ListFile ="installedApps.txt"
        AppName  ="$(AppId)"
      >
      <Output TaskParameter="IsAppInstalled" PropertyName="IsAppInstalled" />
    </CheckIfInstalled>
    
    <!-- Check that the required SSH keys exist, and generate them if not. -->
    <Exec Condition="!Exists('$(SSHPrivateKeyPath)') or !Exists('$(SSHPublicKeyPath)')"
          Command ="$(SSHKeygenToolExe) -t rsa -b 4096 -f %22$(SSHPrivateKeyPath)%22 -N ''" />

    <CallTarget Targets="_BuildBar" />
    <CallTarget Targets="FirstDeploy" Condition="$(IsAppInstalled) == 'false' OR %(BuildBar.DevMode) == 'false'" />
    <CallTarget Targets="OptimizedDeploy" Condition="$(IsAppInstalled) == 'true'" />

    <!-- Remove the -debugNative flag if it was set. -->
    <CheckFlagFile
        Action="remove"
        FlagFile="$(AppDataPath)\BlackBerry\vsndk-debugNative.txt"
      />
  </Target>

  <Target Name="FirstDeploy">
    <ItemGroup>
      <BuildBar Include="@(None)" />
    </ItemGroup>

    <CheckFlagFile
        Condition="%(BuildBar.DevMode) == 'true'"
        Action="check"
        FlagFile="$(AppDataPath)\BlackBerry\vsndk-debugNative.txt"
      >
      <Output TaskParameter="IsFlagSet" PropertyName="IsDebugging" />
    </CheckFlagFile>
    
    <BBDeploy
        ToolExe           ="$(DeployToolExe)"
        ToolPath          ="$(BuildBarToolPath)"
        Device            ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP)"
        Password          ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_password)"
        Package           ="$(ProjectDir)%(BuildBar.OutputFile)"
        InstallApp        ="true"
        LaunchApp         ="true"
        DebugNative       ="$(IsDebugging)"
      />
  </Target>
  
  <Target Name="OptimizedDeploy">
    <ItemGroup>
      <BuildBar Include="@(None)" />
    </ItemGroup>

    <!-- Get the target file map. -->
    <BBNativePackager
        Sources                        ="@(BuildBar)"
        Platform                       ="$(Platform)"
        Configuration                  ="$(Configuration)"
        ApplicationDescriptorXml       ="%(BuildBar.ApplicationDescriptorXml)"
        ProjectDir                     ="$(ProjectDir)"
        SolutionDir                    ="$(SolutionDir)"
        Device            ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP)"
        Password          ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_password)"
        BarDeploy                      ="%(BuildBar.BarDeploy)"
        DevMode                        ="%(BuildBar.DevMode)"
        DebugToken                     ="%(BuildBar.DebugToken)"
        TargetFormat                   ="%(BuildBar.TargetFormat)"
        OutputFile                     ="%(BuildBar.OutputFile)"
        ToolExe                        ="$(BuildBarToolExe)"
        ToolPath                       ="$(OptimizedDeployToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(BuildBar_MinimalRebuildFromTracking)"
        TrackerLogDirectory            ="%(BuildBar.TrackerLogDirectory)"
        TLogReadFiles                  ="@(BuildBarTLogReadFiles)"
        TLogWriteFiles                 ="@(BuildBarTLogWriteFiles)"
        AcceptableNonZeroExitCodes     ="%(BuildBar.AcceptableNonZeroExitCodes)"
        GetTargetFileMap               ="true"
      >

      <Output TaskParameter="SkippedExecution" PropertyName="BuildBarSkippedExecution" />
      <Output TaskParameter="OutputFile" PropertyName="OutputBar" />
      <Output TaskParameter="Device" PropertyName="TargetIP" />
      <Output TaskParameter="BarDeploy" PropertyName="DeployBar" />
      <Output TaskParameter="Password" PropertyName="Password" />
    </BBNativePackager>

    <!-- Get the target manifest. -->
    <BBDeploy
        ToolExe           ="$(DeployToolExe)"
        ToolPath          ="$(OptimizedDeployToolPath)"
        Device            ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP)"
        Password          ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_password)"
        LocalManifestFile ="localManifest.mf"
        GetFile           ="META-INF/MANIFEST.MF"
        GetFileSaveAs     ="targetManifest.mf"
      >
      <Output TaskParameter ="PackageId" PropertyName="PackageId" />
      <Output TaskParameter ="PackageName" PropertyName="PackageName" />
      <Output TaskParameter ="TargetManifestFile" PropertyName="TargetManifestFile" />
    </BBDeploy>

    <Message Text="PackageId: $(PackageId)" />

    <!-- Parse both manifests to get a list of changes. -->
    <DiffManifests
        LocalManifestFile   ="localManifest.mf"
        TargetManifestFile  ="targetManifest.mf"
        TargetFileMap       ="targetFileMap.txt"
      >
      <Output TaskParameter ="ModifiedFiles" ItemName="ModifiedFiles" />
      <Output TaskParameter ="ModifiedFilesCount" PropertyName="ModifiedFilesCount" />
      <Output TaskParameter ="DeletedFiles" ItemName="DeletedFiles" />
      <Output TaskParameter ="DeletedFilesCount" PropertyName="DeletedFilesCount" />
    </DiffManifests>

    <Message Text="Modified [$(ModifiedFilesCount)]: [%(ModifiedFiles.SourcePath)] => [%(ModifiedFiles.Identity)]" />
    <Message Text="Deleted [$(DeletedFilesCount)]: [%(DeletedFiles.Identity)]" />

    <PropertyGroup>
      <AppDescriptorChanged>false</AppDescriptorChanged>
      <AppDescriptorChanged Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(%(ModifiedFiles.SourcePath), '.+bar-descriptor\.xml'))">true</AppDescriptorChanged>
    </PropertyGroup>

    <Message Text="App Descriptor changed, re-packaging..." Condition="$(AppDescriptorChanged) == 'true'" />

    <!-- Deploy new and modified files to the device. -->
    <BBDeploy Condition="$(ModifiedFilesCount) > 0 AND !$(AppDescriptorChanged)"
        ToolExe           ="$(DeployToolExe)"
        ToolPath          ="$(OptimizedDeployToolPath)"
        LocalManifestFile ="localManifest.mf"
        PutFile           ="%(ModifiedFiles.SourcePath)"
        PutFileSaveAs     ="%(ModifiedFiles.Identity)"
        Device            ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP)"
        Password          ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_password)"
      />

    <!--
    To delete files from the device, we can use either SSH or QConn.
    To do either, first we need to establish a secure connection using blackberry-connect.
    -->
    <!-- Establish a secure connection to the device. Note: %22 == " character in ASCII (hex) -->
    <AsyncExec Condition="$(DeletedFilesCount) > 0 AND !$(AppDescriptorChanged)"
        WorkingDirectory  ="$(OptimizedDeployToolPath)"
        Password          ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_password)"
        Command           ="$(ConnectToolExe) $(Device) -sshPublicKey %22$(SSHPublicKeyPath)%22"
      />

    <!-- Delete files over SSH. -->
    <SSHDelete Condition="$(DeletedFilesCount) > 0 AND !$(AppDescriptorChanged)"
        ToolExe         ="$(SSHToolExe)"
        ToolPath        ="$(SSHToolPath)"
        PackageId       ="$(PackageId)"
        PackageName     ="$(PackageName)"
        Device          ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP)"
        PrivateKeyPath  ="$(SSHPrivateKeyPath)"
        DeleteFiles     ="@(DeletedFiles)"
      />

    <CheckFlagFile
        Condition="%(BuildBar.DevMode) == 'true' AND !$(AppDescriptorChanged)"
        Action="check"
        FlagFile="$(AppDataPath)\BlackBerry\vsndk-debugNative.txt"
      >
      <Output TaskParameter="IsFlagSet" PropertyName="IsDebugging" />
    </CheckFlagFile>

    <!-- Launch the app without installing it. -->
    <BBDeploy Condition="!$(AppDescriptorChanged)"
        ToolExe           ="$(DeployToolExe)"
        ToolPath          ="$(OptimizedDeployToolPath)"
        PackageId         ="$(PackageId)"
        PackageName       ="$(PackageName)"
        Device            ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP)"
        Password          ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_password)"
        LaunchApp         ="true"
        DebugNative       ="$(IsDebugging)"
      />
    
    <!-- Delete temporary files used by the optimized build process. -->
    <Delete Files="localManifest.mf;targetManifest.mf;targetFileMap.txt;installedApps.txt" />

    <!-- App Descriptor changed, so re-package and perform full deploy. -->  
    <BBNativePackager  Condition="$(AppDescriptorChanged)"
        Sources                        ="@(BuildBar)"
        Platform                       ="$(Platform)"
        Configuration                  ="$(Configuration)"
        ApplicationDescriptorXml       ="%(BuildBar.ApplicationDescriptorXml)"
        ProjectDir                     ="$(ProjectDir)"
        SolutionDir                    ="$(SolutionDir)"
        Device            ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_IP)"
        Password          ="$(Registry:HKEY_CURRENT_USER\SOFTWARE\BlackBerry\BlackBerryVSPlugin@device_password)"
        BarDeploy                      ="%(BuildBar.BarDeploy)"
        DevMode                        ="%(BuildBar.DevMode)"
        PackageManifestOnly            ="false"
        DebugToken                     ="%(BuildBar.DebugToken)"
        TargetFormat                   ="%(BuildBar.TargetFormat)"
        OutputFile                     ="%(BuildBar.OutputFile)"
        ToolExe                        ="$(BuildBarToolExe)"
        ToolPath                       ="$(BuildBarToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(BuildBar_MinimalRebuildFromTracking)"
        TrackerLogDirectory            ="%(BuildBar.TrackerLogDirectory)"
        TLogReadFiles                  ="@(BuildBarTLogReadFiles)"
        TLogWriteFiles                 ="@(BuildBarTLogWriteFiles)"
        AcceptableNonZeroExitCodes     ="%(BuildBar.AcceptableNonZeroExitCodes)"
      >

      <Output TaskParameter="SkippedExecution" PropertyName="BuildBarSkippedExecution" />
      <Output TaskParameter="OutputFile" PropertyName="OutputBar" />
      <Output TaskParameter="Device" PropertyName="TargetIP" />
      <Output TaskParameter="BarDeploy" PropertyName="DeployBar" />
      <Output TaskParameter="Password" PropertyName="Password" />
    </BBNativePackager>

    <CallTarget Targets="FirstDeploy" Condition="$(AppDescriptorChanged)" />
  </Target>
</Project>